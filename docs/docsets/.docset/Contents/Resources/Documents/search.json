{"Typealiases.html#/s:15Survey_Schedule9StatIndexa":{"name":"StatIndex","abstract":"<p>The index of the visit log on master schedule</p>"},"Functions.html#/s:15Survey_Schedule16readJsonFromFile8filePath10SwiftyJSON0J0VSgSS_tF":{"name":"readJsonFromFile(filePath:)","abstract":"<p>Read the JSON from file</p>"},"Functions.html#/s:15Survey_Schedule18getStatsTravelTime5stat15stat2SiSS_SStF":{"name":"getStatsTravelTime(stat1:stat2:)","abstract":"<p>Get the travel time between two stations</p>"},"Functions.html#/s:15Survey_Schedule15getStationsListSayAA7StationCGyF":{"name":"getStationsList()","abstract":"<p>Get the list for all stations</p>"},"Functions.html#/s:15Survey_Schedule24getStartStationFromCache8stationsSSSaySSG_tF":{"name":"getStartStationFromCache(stations:)","abstract":"<p>Get the start station of  the minumum time permutation station list</p>"},"Functions.html#/s:15Survey_Schedule26getMinPermStationFromCache8stationsSaySSGAD_tF":{"name":"getMinPermStationFromCache(stations:)","abstract":"<p>Get the minimum time permutation of station list from cache</p>"},"Functions.html#/s:15Survey_Schedule35getMinPermWithStartStationFromCache8stationsSaySSGAD_tF":{"name":"getMinPermWithStartStationFromCache(stations:)","abstract":"<p>Get the minimum time permutation that start with the first station of station list</p>"},"Functions.html#/s:15Survey_Schedule17setMinPermToCache03minE0ySaySSG_tF":{"name":"setMinPermToCache(minPerm:)","abstract":"<p>Save the minimum time permutation to cache</p>"},"Functions.html#/s:15Survey_Schedule6getKey8stationsSSSaySSG_tF":{"name":"getKey(stations:)","abstract":"<p>Get the key of the cache from station list</p>"},"Functions.html#/s:15Survey_Schedule14getTimeFromStr4time10Foundation4DateVSS_tF":{"name":"getTimeFromStr(time:)","abstract":"<p>Get Date object from time string</p>"},"Functions.html#/s:15Survey_Schedule14getCurrentDate10Foundation0E0VyF":{"name":"getCurrentDate()","abstract":"<p>Get the current date</p>"},"Functions.html#/s:15Survey_Schedule12getDiffInSec5start3endSi10Foundation4DateV_AGtF":{"name":"getDiffInSec(start:end:)","abstract":"<p>Get the difference between Date objects</p>"},"Functions.html#/s:15Survey_Schedule19getTravelTimeString3secSSSi_tF":{"name":"getTravelTimeString(sec:)","abstract":"<p>Get the current date</p>"},"Global%20Variables.html#/s:15Survey_Schedule15clusterInfoFileSSvp":{"name":"clusterInfoFile","abstract":"<p>The file name of original clustering</p>"},"Global%20Variables.html#/s:15Survey_Schedule12statInfoFileSSvp":{"name":"statInfoFile","abstract":"<p>The file name of information of all stations</p>"},"Global%20Variables.html#/s:15Survey_Schedule18statTravelTimeFileSSvp":{"name":"statTravelTimeFile","abstract":"<p>The file name of Staitons travel time</p>"},"Global%20Variables.html#/s:15Survey_Schedule17statPermCacheFileSSvp":{"name":"statPermCacheFile","abstract":"<p>The file name of minimum time permutation of stations</p>"},"Global%20Variables.html#/s:15Survey_Schedule22statPermStartCacheFileSSvp":{"name":"statPermStartCacheFile","abstract":"<p>The file name of minimum time permutation of stations with particualr start station</p>"},"Global%20Variables.html#/s:15Survey_Schedule11clusterInfo10SwiftyJSON0F0VSgvp":{"name":"clusterInfo","abstract":"<p>The clusters of stations in JSON</p>"},"Global%20Variables.html#/s:15Survey_Schedule8statInfo10SwiftyJSON0F0VSgvp":{"name":"statInfo","abstract":"<p>The information of all stations in JSON</p>"},"Global%20Variables.html#/s:15Survey_Schedule18statTravelTimeInfo10SwiftyJSON0H0VSgvp":{"name":"statTravelTimeInfo","abstract":"<p>The travel time between any two stations in JSON</p>"},"Global%20Variables.html#/s:15Survey_Schedule13statPermCache10SwiftyJSON0G0VSgvp":{"name":"statPermCache","abstract":"<p>The cache of minimum time permutation of stations</p>"},"Global%20Variables.html#/s:15Survey_Schedule18statPermStartCache10SwiftyJSON0H0VSgvp":{"name":"statPermStartCache","abstract":"<p>The cache of minimum time permutation of stations wiht particular start station</p>"},"Global%20Variables.html#/s:15Survey_Schedule1NSivp":{"name":"N","abstract":"<p>The repeat interval</p>"},"Global%20Variables.html#/s:15Survey_Schedule1MSivp":{"name":"M","abstract":"<p>Travel time threshhold</p>"},"Global%20Variables.html#/s:15Survey_Schedule11WorkingHourSivp":{"name":"WorkingHour","abstract":"<p>The working hour per day</p>"},"Global%20Variables.html#/s:15Survey_Schedule11BaseStationSSvp":{"name":"BaseStation","abstract":"<p>The reference station that should start with and end with</p>"},"Global%20Variables.html#/s:15Survey_Schedule14InvalidStationSSvp":{"name":"InvalidStation","abstract":"<p>Invalid station</p>"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC5DebugSbvp":{"name":"Debug","abstract":"<p>True, if debugging message shows</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC11measureTimeSivp":{"name":"measureTime","abstract":"<p>The estimated time to measure a station</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC14lastRepeatTimeSivp":{"name":"lastRepeatTime","abstract":"<p>The timestamp that last revisit happened</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC12getVisitPath8statList9pathSoFarSayAA0F3LogCGSaySSG_AItF":{"name":"getVisitPath(statList:pathSoFar:)","abstract":"<p>Get the optimal routing path of given station list</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC21simulateVisitStations8statList9pathSoFarSayAA0F3LogCGSaySSG_AItF":{"name":"simulateVisitStations(statList:pathSoFar:)","abstract":"<p>Simulate the routing with revisiting threshhold from stations in station list</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC12getStartStat8statListSSSaySSG_tF":{"name":"getStartStat(statList:)","abstract":"<p>Get the start station of the minimum permutation of the station list.</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC30getMinTimePermutationWithStart9startStat8statListSaySSGSS_AGtF":{"name":"getMinTimePermutationWithStart(startStat:statList:)","abstract":"<p>Get the minimum time permutation that start with startStat</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC21getMinTimePermutation8statListSaySSGAF_tF":{"name":"getMinTimePermutation(statList:)","abstract":"<p>Get the minimum time permutation of station list</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC17getTotalVisitTime8statListSiSaySSG_tF":{"name":"getTotalVisitTime(statList:)","abstract":"<p>Get the total visit time of a list of stations</p>","parent_name":"StationRouting"},"Classes/StationRouting.html#/s:15Survey_Schedule14StationRoutingC15resetRepeatTimeyyF":{"name":"resetRepeatTime()","abstract":"<p>Reset the repeat time</p>","parent_name":"StationRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC11preVisitLogAA0fG0Cvp":{"name":"preVisitLog","abstract":"<p>Previous visit log</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC12nextVisitLogAA0fG0Cvp":{"name":"nextVisitLog","abstract":"<p>Next visit log</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC7nextIdxSi3day_Si7clusterSi7stationtvp":{"name":"nextIdx","abstract":"<p>The index of next visit log on master schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC11nextStationSSvp":{"name":"nextStation","abstract":"<p>The next station name that shows in Next Station section</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC14nextTravelTimeSSvp":{"name":"nextTravelTime","abstract":"<p>The travel time to next station that shows in Next Station section</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC11doneLoadingSbvp":{"name":"doneLoading","abstract":"<p>The bool indecates whether shows the loading view or not</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC8dayLimitSivp":{"name":"dayLimit","abstract":"<p>The working hour for a day in hours</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC11defaultTime10Foundation4DateVvp":{"name":"defaultTime","abstract":"<p>The default date in the app</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC9beginDate10Foundation0F0Vvp":{"name":"beginDate","abstract":"<p>The date a user done with the first station of a day</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC14lastRepeatTimeSivp":{"name":"lastRepeatTime","abstract":"<p>The timestamp that last revisit happened</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC5todaySivp":{"name":"today","abstract":"<p>The current day on master schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC9doneTodaySbvp":{"name":"doneToday","abstract":"<p>True, if done with last station, not CS25, on today&rsquo;s schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC12stationsListSayAA7StationCGvp":{"name":"stationsList","abstract":"<p>Station list</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC17stationListBackUpSaySbGvp":{"name":"stationListBackUp","abstract":"<p>Copy of all stations scheduling</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC06masterB0SaySaySayAA8VisitLogCGGGvp":{"name":"masterSchedule","abstract":"<p>The master schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC07clusterD0AA07ClusterD0Cvp":{"name":"clusterRouting","abstract":"<p>The cluster routing object</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC07stationD0AA07StationD0Cvp":{"name":"stationRouting","abstract":"<p>The station routing object</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC16currentVisitPathSayAA0F3LogCGvp":{"name":"currentVisitPath","abstract":"<p>Current visit log so far.  TODO: Make currentVisitPath two dimensional array to indicate the visit log for different days</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingCACycfc":{"name":"init()","abstract":"<p>Initializes a new dynamicRouting. The original clusters will be obtain from file and the default date will be set.</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC5resetyyF":{"name":"reset()","abstract":"<p>Reset basic setting when a user done with first station which should be CS25</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC011makeInitialB0yyF":{"name":"makeInitialSchedule()","abstract":"<p>Create initial master schedule when first open the app.</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC05mergeB007updatedB0ySaySaySayAA8VisitLogCGGG_tF":{"name":"mergeSchedule(updatedSchedule:)","abstract":"<p>Update the master schedule by append updatedSchedule to currentVisitPath</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC18removeFirstStation8scheduleSaySaySayAA8VisitLogCGGGAJ_tF":{"name":"removeFirstStation(schedule:)","abstract":"<p>Remove the first visitlog from the schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC10getNextIdxyyF":{"name":"getNextIdx()","abstract":"<p>Get the next scheduled station which should be not be visited and not skpped</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC15setNextVisitLog9isRevisitySb_tF":{"name":"setNextVisitLog(isRevisit:)","abstract":"<p>Update the next visit log from nextIdx</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC14setNextStationyyF":{"name":"setNextStation()","abstract":"<p>Set the next station name in Next Station section</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC14createClusters10SwiftyJSON0H0VyF":{"name":"createClusters()","abstract":"<p>Create clusters from those unvisited and scheduled stations.</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC10getCluster7stationSSAA7StationC_tF":{"name":"getCluster(station:)","abstract":"<p>Get the cluster that consis of the staion</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC20setPreStationVisitedyyF":{"name":"setPreStationVisited()","abstract":"<p>Set visited for the station that a user just done with measurement</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC15getStationIndex7stationSiSS_tF":{"name":"getStationIndex(station:)","abstract":"<p>Get the station index in stationsList</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC18removeFirstCluster8scheduleSaySaySayAA8VisitLogCGGGAJ_tF":{"name":"removeFirstCluster(schedule:)","abstract":"<p>Remove first cluster in the schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC18insertFirstCluster07clusterB08scheduleSaySaySayAA8VisitLogCGGGAI_AKtF":{"name":"insertFirstCluster(clusterSchedule:schedule:)","abstract":"<p>Insert a cluster in the front of the schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC017getRevisitClusterB04fromSayAA8VisitLogCGSaySSG_tF":{"name":"getRevisitClusterSchedule(from:)","abstract":"<p>Create a cluster which is an array of visitlog from list of station name</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC08indexingB0yyF":{"name":"indexingSchedule()","abstract":"<p>Create index for all visitlog in the master schedule in order to gray out the scheduled station</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC18isStationScheduled7stationSbSS_tF":{"name":"isStationScheduled(station:)","abstract":"<p>Check the station is schedule or not</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC14isFirstStationSbyF":{"name":"isFirstStation()","abstract":"<p>Check the next station is the first station of a day or not</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC16doneVisitStationyyF":{"name":"doneVisitStation()","abstract":"<p>Handle done with a station in the background</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC16HandleDoneActionyyF":{"name":"HandleDoneAction()","abstract":"<p>Handle done with the measurement of a station</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC19applyStationsChangeyyF":{"name":"applyStationsChange()","abstract":"<p>Handle the stations change</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC21backupStationsSettingyyF":{"name":"backupStationsSetting()","abstract":"<p>Create a backup station list to know what station change</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC26isScheduledStationsChangedSbyF":{"name":"isScheduledStationsChanged()","abstract":"<p>Check whether the stations has been changed</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC21handleSkipNextStationyyF":{"name":"handleSkipNextStation()","abstract":"<p>Handle the action when Skip Station tapped. The skipped station will remaine on master schedule and labeled","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC09handleEndA0yyF":{"name":"handleEndSurvey()","abstract":"<p>Handle the action when End Survey tapped</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC17appendBaseStationyyF":{"name":"appendBaseStation()","abstract":"<p>Append the base station to the end of visited station and update the master schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC06updateB8TomorrowyyF":{"name":"updateScheduleTomorrow()","abstract":"<p>Calculate the schedule for next day and update the master schdule when it&rsquo;s done</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC21applyInitialTimestampyyF":{"name":"applyInitialTimestamp()","abstract":"<p>Set the begin time to all stations and apply the timestamp</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC17applyTimeInterval3dayySi_tF":{"name":"applyTimeInterval(day:)","abstract":"<p>Append the base station to the end of visited station and update the master schedule</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC12setStartDate3day05startG0ySi_10Foundation0G0VtF":{"name":"setStartDate(day:startDate:)","abstract":"<p>Set start date for the rest of scheduled station of the day</p>","parent_name":"DynamicRouting"},"Classes/DynamicRouting.html#/s:15Survey_Schedule14DynamicRoutingC15updateTimestamp6offsety10Foundation14DateComponentsV_tF":{"name":"updateTimestamp(offset:)","abstract":"<p>Update the ETA for the rest of schedule station today</p>","parent_name":"DynamicRouting"},"Classes/ClusterRouting.html#/s:15Survey_Schedule14ClusterRoutingC5DebugSbvp":{"name":"Debug","abstract":"<p>True, if debugging message shows</p>","parent_name":"ClusterRouting"},"Classes/ClusterRouting.html#/s:15Survey_Schedule14ClusterRoutingC14clusterStartIdSivp":{"name":"clusterStartId","abstract":"<p>The new cluster start id</p>","parent_name":"ClusterRouting"},"Classes/ClusterRouting.html#/s:15Survey_Schedule14ClusterRoutingC11workingTimeSivp":{"name":"workingTime","abstract":"<p>The working time per day in seconds</p>","parent_name":"ClusterRouting"},"Classes/ClusterRouting.html#/s:15Survey_Schedule14ClusterRoutingC07stationD0AA07StationD0Cvp":{"name":"stationRouting","abstract":"<p>StationRouting object</p>","parent_name":"ClusterRouting"},"Classes/ClusterRouting.html#/s:15Survey_Schedule14ClusterRoutingC11clusterInfo11workingTimeAC10SwiftyJSON0J0V_Sitcfc":{"name":"init(clusterInfo:workingTime:)","abstract":"<p>Initializes a new ClusterRouting.</p>","parent_name":"ClusterRouting"},"Classes/ClusterRouting.html#/s:15Survey_Schedule14ClusterRoutingC011getCompleteB04info11workingHour11currentStatSaySaySayAA8VisitLogCGGG10SwiftyJSON0O0V_SiSStF":{"name":"getCompleteSchedule(info:workingHour:currentStat:)","abstract":"<p>Caculate the full schedule with the clusterInfo, workingHour and station current at</p>","parent_name":"ClusterRouting"},"Classes/ClusterRouting.html#/s:15Survey_Schedule14ClusterRoutingC10visitedAll7jsonObjSb10SwiftyJSON0J0V_tF":{"name":"visitedAll(jsonObj:)","abstract":"<p>Check all clusters have been visited</p>","parent_name":"ClusterRouting"},"Classes/ClusterRouting.html#/s:15Survey_Schedule14ClusterRoutingC18resetVisitedStatus7jsonObj10SwiftyJSON0K0VAH_tF":{"name":"resetVisitedStatus(jsonObj:)","abstract":"<p>Set all cluster unvisited</p>","parent_name":"ClusterRouting"},"Classes/VisitLog.html#/s:15Survey_Schedule8VisitLogC2id10Foundation4UUIDVvp":{"name":"id","abstract":"<p>Unique id of the visit log</p>","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:15Survey_Schedule8VisitLogC7stationSSvp":{"name":"station","abstract":"<p>The station name that should be visited</p>","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:15Survey_Schedule8VisitLogC9timestampSivp":{"name":"timestamp","abstract":"<p>A time interval that represents the arrval time at station. The start of time interval is the first first when calling getCompleteSchedule of <strong>ClusterRouting</strong> class.</p>","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:15Survey_Schedule8VisitLogC9isRevisitSbvp":{"name":"isRevisit","abstract":"<p>Indicate the visit log is for revisiting or not</p>","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:15Survey_Schedule8VisitLogC03didC0Sbvp":{"name":"didVisit","abstract":"<p>Indicate whether the visit log has been visited or not</p>","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:15Survey_Schedule8VisitLogC4date10Foundation4DateVvp":{"name":"date","abstract":"<p>The timestamp that shows on master schedule</p>","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:15Survey_Schedule8VisitLogC6isSkipSbvp":{"name":"isSkip","abstract":"<p>Indicate the visit log is skipped or not</p>","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:15Survey_Schedule8VisitLogC4stat9timestamp9isRevisitACSS_SiSbtcfc":{"name":"init(stat:timestamp:isRevisit:)","abstract":"<p>Initialize a new station</p>","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"VisitLog"},"Classes/VisitLog.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"VisitLog"},"Classes/Station.html#/c:@M@Survey_Schedule@objc(cs)Station(py)coordinate":{"name":"coordinate","abstract":"<p>The coordinates of the station in (latitude, longitude)</p>","parent_name":"Station"},"Classes/Station.html#/s:15Survey_Schedule7StationC2idSSvp":{"name":"id","abstract":"<p>Unique id of the station</p>","parent_name":"Station"},"Classes/Station.html#/s:15Survey_Schedule7StationC4nameSSvp":{"name":"name","abstract":"<p>Name of the station</p>","parent_name":"Station"},"Classes/Station.html#/s:15Survey_Schedule7StationC11isScheduledSbvp":{"name":"isScheduled","abstract":"<p>Whether the station Is scheduled on the master schedule</p>","parent_name":"Station"},"Classes/Station.html#/s:15Survey_Schedule7StationC9isVisitedSbvp":{"name":"isVisited","abstract":"<p>Whether the station is visited or not</p>","parent_name":"Station"},"Classes/Station.html#/s:15Survey_Schedule7StationC9imageNameSSvp":{"name":"imageName","abstract":"<p>The image name of the station in station details</p>","parent_name":"Station"},"Classes/Station.html#/s:15Survey_Schedule7StationC2id4name5image10coordinateACSS_S2SSo22CLLocationCoordinate2DVtcfc":{"name":"init(id:name:image:coordinate:)","abstract":"<p>Initialize a new station</p>","parent_name":"Station"},"Classes/Station.html":{"name":"Station","abstract":"<p>Represent the station that needs to be measured. <strong>Station</strong> contain all the station information including the"},"Classes/VisitLog.html":{"name":"VisitLog","abstract":"<p>Represent a scheduled station that shoud be visited on the master schedule.</p>"},"Classes/ClusterRouting.html":{"name":"ClusterRouting","abstract":"<p>The <strong>ClusterRouting</strong> calculates the routing between clusters. The function getCompleteSchedule will return"},"Classes/DynamicRouting.html":{"name":"DynamicRouting","abstract":"<p>Represent the dynamic routing handler. The class is reponsible for do the real-time calculation to"},"Classes/StationRouting.html":{"name":"StationRouting","abstract":"<p>Represent the station routing handler. The <strong>StationRouting</strong> is responsible for simulating the routing within a cluster including finding a revisit station when the time exceed repeat interval</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global%20Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}